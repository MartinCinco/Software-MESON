import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from kmodes.kprototypes import KPrototypes
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from reportlab.lib.utils import ImageReader
import os

# ===============================
# FUNCIONES DE PROCESAMIENTO
# ===============================

def limpiar_datos(df):
    df['COMISI√ìN'] = df['COMISI√ìN'].replace('[\$,]', '', regex=True).str.replace('.', '').str.replace(',', '.').astype(float)

    df['NUM_LOTES'] = df['LOTE'].astype(str).apply(lambda x: len(str(x).split(',')))
    
    df['PAGADO'] = df['PAGADO'].str.strip().str.upper().map(lambda x: 1 if x == 'PAGADO' else 0)
    df['CAPTURADO'] = df['VENTA CAPTURADA'].str.strip().str.upper().map(lambda x: 1 if x == 'CAPTURADO' else 0)
    df['LIQUIDACION'] = df['LIQUIDACION'].str.strip().str.upper().map(lambda x: 1 if x == 'LIQUIDO' else 0)

    columnas = ['NUM_LOTES', 'MANZANA', 'COMISI√ìN', 'FRACCIONAMIENTO', 'CERRADOR', 'AGENDADOR', 'PAGADO', 'CAPTURADO', 'LIQUIDACION']
    df_limpio = df[columnas].copy()

    df_limpio.fillna('DESCONOCIDO', inplace=True)
    return df_limpio

def crear_graficos(df):
    os.makedirs("graficos", exist_ok=True)

    plt.figure(figsize=(6,4))
    sns.countplot(x='CLUSTER', data=df)
    plt.title("Distribuci√≥n de Clientes por Cl√∫ster")
    plt.savefig("graficos/cluster_distribucion.png")
    plt.close()

    plt.figure(figsize=(6,4))
    sns.boxplot(x='CLUSTER', y='COMISI√ìN', data=df)
    plt.title("Comisi√≥n por Cl√∫ster")
    plt.savefig("graficos/comision_cluster.png")
    plt.close()

    plt.figure(figsize=(6,4))
    sns.boxplot(x='CLUSTER', y='NUM_LOTES', data=df)
    plt.title("N√∫mero de Lotes por Cl√∫ster")
    plt.savefig("graficos/lotes_cluster.png")
    plt.close()

def generar_pdf(df, nombre_pdf="reporte_clientes.pdf"):
    c = canvas.Canvas(nombre_pdf, pagesize=letter)
    c.setFont("Helvetica", 14)
    c.drawString(50, 760, "Reporte de Cl√∫steres de Clientes")

    # Resumen por cl√∫ster
    resumen = df.groupby('CLUSTER')[['NUM_LOTES', 'COMISI√ìN', 'PAGADO', 'LIQUIDACION']].mean().round(2)
    c.setFont("Helvetica", 10)
    y = 730
    for i, row in resumen.iterrows():
        c.drawString(50, y, f"Cl√∫ster {i}: Lotes Prom: {row['NUM_LOTES']} | Comisi√≥n Prom: ${row['COMISI√ìN']} | Pagado: {row['PAGADO']} | Liquidado: {row['LIQUIDACION']}")
        y -= 15

    # Insertar im√°genes de gr√°ficos
    graficos = ["graficos/cluster_distribucion.png", "graficos/comision_cluster.png", "graficos/lotes_cluster.png"]
    y = 600
    for grafico in graficos:
        c.drawImage(ImageReader(grafico), 50, y, width=500, height=150)
        y -= 170

    c.save()

# ===============================
# EJECUCI√ìN PRINCIPAL
# ===============================

archivo = 'clientes.xlsx'  # Cambia seg√∫n tu archivo
df = pd.read_excel(archivo)
df_limpio = limpiar_datos(df)

# Matriz y categor√≠as
matriz = df_limpio.values
categorical_cols = [3, 4, 5]  # FRACCIONAMIENTO, CERRADOR, AGENDADOR

# Clustering
kproto = KPrototypes(n_clusters=3, init='Cao', verbose=0)
clusters = kproto.fit_predict(matriz, categorical=categorical_cols)
df['CLUSTER'] = clusters

# Guardar Excel
df.to_excel('clientes_clasificados.xlsx', index=False)

# Crear gr√°ficos y PDF
crear_graficos(df)
generar_pdf(df)

print("‚úî Clustering realizado.")
print("üìä Gr√°ficos guardados en carpeta 'graficos'")
print("üìÑ PDF generado como 'reporte_clientes.pdf'")
